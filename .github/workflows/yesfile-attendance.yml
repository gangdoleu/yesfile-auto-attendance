name: 예스파일 자동 출석체크

# 워크플로우 실행 조건
on:
  # 매일 한국시간 00:30에 자동 실행 (UTC 15:30)
  schedule:
    - cron: '30 15 * * *'
  
  # 수동 실행 가능
  workflow_dispatch:
  
  # 코드 Push 시에도 테스트 실행 (선택사항)
  push:
    branches: [ main, master ]

jobs:
  attendance-check:
    runs-on: ubuntu-latest
    
    steps:
    # 1. 리포지토리 체크아웃
    - name: 코드 체크아웃
      uses: actions/checkout@v4
    
    # 2. 리포지토리 구조 확인 (디버깅용)
    - name: 리포지토리 구조 확인
      run: |
        echo "=== 현재 작업 디렉토리 ==="
        pwd
        echo "=== 파일 목록 ==="
        ls -la
        echo "=== Python 파일 검색 ==="
        find . -name "*.py" -type f
        echo "=== requirements.txt 확인 ==="
        if [ -f "requirements.txt" ]; then
          echo "requirements.txt 존재함"
          cat requirements.txt
        else
          echo "requirements.txt 파일이 없음"
        fi
    
    # 3. Python 환경 설정
    - name: Python 환경 설정
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    # 4. 시스템 패키지 업데이트 및 Chrome 설치
    - name: Chrome 브라우저 설치
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          google-chrome-stable \
          xvfb \
          unzip \
          wget
    
    # 5. Python 의존성 설치
    - name: Python 패키지 설치
      run: |
        python -m pip install --upgrade pip
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        else
          echo "requirements.txt가 없어서 기본 패키지만 설치합니다"
          pip install selenium>=4.23.0 webdriver-manager>=4.0.1
        fi
    
    # 6. Chrome 및 시스템 정보 확인
    - name: 브라우저 정보 확인
      run: |
        echo "=== Chrome 버전 ==="
        google-chrome --version
        echo "=== Python 버전 ==="
        python --version
        echo "=== 설치된 패키지 ==="
        pip list | grep -E "(selenium|webdriver)"
        echo "=== 환경 변수 확인 ==="
        echo "DISPLAY: $DISPLAY"
    
    # 7. Python 스크립트 파일 확인
    - name: Python 스크립트 확인
      run: |
        echo "=== Python 파일 존재 여부 확인 ==="
        if [ -f "yesfile_attendance_improved.py" ]; then
          echo "✅ yesfile_attendance_improved.py 파일 존재"
          ls -la yesfile_attendance_improved.py
        elif [ -f "yesfile_attendance.py" ]; then
          echo "✅ yesfile_attendance.py 파일 존재"
          ls -la yesfile_attendance.py
        else
          echo "❌ Python 스크립트 파일을 찾을 수 없습니다"
          echo "현재 디렉토리의 모든 .py 파일:"
          find . -name "*.py" -type f
          exit 1
        fi
    
    # 8. Secrets 확인 (보안상 값은 출력하지 않음)
    - name: 환경변수 확인
      env:
        YESFILE_USERNAME: ${{ secrets.YESFILE_USERNAME }}
        YESFILE_PASSWORD: ${{ secrets.YESFILE_PASSWORD }}
      run: |
        echo "=== Secrets 설정 확인 ==="
        if [ -z "$YESFILE_USERNAME" ]; then
          echo "❌ YESFILE_USERNAME이 설정되지 않았습니다"
          exit 1
        else
          echo "✅ YESFILE_USERNAME 설정됨"
        fi
        
        if [ -z "$YESFILE_PASSWORD" ]; then
          echo "❌ YESFILE_PASSWORD가 설정되지 않았습니다"
          exit 1
        else
          echo "✅ YESFILE_PASSWORD 설정됨"
        fi
    
    # 9. 가상 디스플레이 환경에서 자동화 실행
    - name: 예스파일 출석체크 실행
      env:
        YESFILE_USERNAME: ${{ secrets.YESFILE_USERNAME }}
        YESFILE_PASSWORD: ${{ secrets.YESFILE_PASSWORD }}
        DISPLAY: :99
      run: |
        echo "=== 가상 디스플레이 시작 ==="
        # 가상 디스플레이 시작 (더 안전한 방식)
        sudo Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        XVFB_PID=$!
        echo "Xvfb PID: $XVFB_PID"
        sleep 5
        
        echo "=== Python 스크립트 실행 ==="
        # 파일 존재 여부에 따라 실행
        if [ -f "yesfile_attendance_improved.py" ]; then
          python yesfile_attendance_improved.py
        elif [ -f "yesfile_attendance.py" ]; then
          python yesfile_attendance.py
        else
          echo "❌ 실행할 Python 파일을 찾을 수 없습니다"
          exit 1
        fi
        
        # Xvfb 프로세스 정리
        if [ ! -z "$XVFB_PID" ]; then
          sudo kill $XVFB_PID 2>/dev/null || true
        fi
    
    # 10. 실행 결과 업로드
    - name: 로그 파일 업로드
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: attendance-logs
        path: |
          *.log
          *.txt
          logs/
        retention-days: 7
